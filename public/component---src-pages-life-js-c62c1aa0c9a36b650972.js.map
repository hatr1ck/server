{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/ButtonToolbar.js","webpack:///./src/pages/life.js"],"names":["ButtonToolbar","forwardRef","_ref","ref","bsPrefix","className","props","prefix","createElement","displayName","defaultProps","role","WIDTH","HEIGHT","Cell","render","this","x","y","style","background","position","left","top","width","height","React","Component","Game","state","cells","isRunning","runGame","setState","runIteration","stopGame","timeoutHandler","window","clearTimeout","handleIntervalChange","event","interval","target","value","handleClear","board","makeEmptyBoard","makeCells","rows","cols","boardRef","createRef","console","log","newBoard","neighbors","calculateNeighbors","setTimeout","dirs","i","length","dir","y1","x1","push","getElementOffset","rect","current","getBoundingClientRect","doc","document","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","handleClick","elemOffset","offsetX","clientX","offsetY","clientY","Math","floor","handleRandom","random","Button","onClick","variant","backgroundSize","map","cell","key"],"mappings":"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","file":"component---src-pages-life-js-c62c1aa0c9a36b650972.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import React from 'react';\r\nimport '../styles/life.css';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport Header from '../components/header'\r\nexport const WIDTH = 800;\r\nexport const HEIGHT = 600;\r\n\r\nclass Cell extends React.Component {\r\n  render() {\r\n    const {x, y} = this.props;\r\n    return (\r\n        <div style={{\r\n            background: '#73b76e',\r\n            position: 'absolute',\r\n          left: `${20 * x + 1}px`,\r\n          top: `${20 * y + 1}px`,\r\n          width: `${20 - 1}px`,\r\n          height: `${20 - 1}px`,\r\n        }}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  state = {cells: [], isRunning: false};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.rows = 30;\r\n    this.cols = 40;\r\n    this.board = this.makeEmptyBoard();\r\n    this.boardRef = React.createRef();\r\n  }\r\n\r\n  runGame = () => {\r\n    this.setState({isRunning: true});\r\n    this.runIteration();\r\n  };\r\n\r\n  stopGame = () => {\r\n    this.setState({isRunning: false});\r\n    if (this.timeoutHandler) {\r\n      window.clearTimeout(this.timeoutHandler);\r\n      this.timeoutHandler = null;\r\n    }\r\n  };\r\n\r\n  runIteration() {\r\n    console.log('running iteration');\r\n    let newBoard = this.makeEmptyBoard();\r\n\r\n    // Game logic\r\n    for (let y = 0; y < this.rows; y++) {\r\n      for (let x = 0; x < this.cols; x++) {\r\n        let neighbors = this.calculateNeighbors(this.board, x, y);\r\n        if (this.board[y][x]) {\r\n          if (neighbors === 2 || neighbors === 3) {\r\n            newBoard[y][x] = true;\r\n          } else {\r\n            newBoard[y][x] = false;\r\n          }\r\n        } else {\r\n          if (!this.board[y][x] && neighbors === 3) {\r\n            newBoard[y][x] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.board = newBoard;\r\n    this.setState({cells: this.makeCells()});\r\n    this.timeoutHandler = window.setTimeout(() => {\r\n      this.runIteration();\r\n    }, 100);\r\n  }\r\n\r\n  calculateNeighbors(board, x, y) {\r\n    let neighbors = 0;\r\n    const dirs = [[-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1], [0, -1]];\r\n    for (let i = 0; i < dirs.length; i++) {\r\n      const dir = dirs[i];\r\n      let y1 = y + dir[0];\r\n      let x1 = x + dir[1];\r\n\r\n      if (x1 >= 0 && x1 < this.cols && y1 >= 0 && y1 < this.rows && board[y1][x1]) {\r\n        neighbors++;\r\n      }\r\n    }\r\n\r\n    return neighbors;\r\n  }\r\n\r\n  makeEmptyBoard() {\r\n    let board = [];\r\n    for (let y = 0; y < this.rows; y++) {\r\n      board[y] = [];\r\n      for (let x = 0; x < this.cols; x++) {\r\n        board[y][x] = false;\r\n      }\r\n    }\r\n    return board;\r\n  }\r\n\r\n  makeCells() {\r\n    let cells = [];\r\n    for (let y = 0; y < this.rows; y++) {\r\n      for (let x = 0; x < this.cols; x++) {\r\n        if (this.board[y][x]) {\r\n          cells.push({x, y});\r\n        }\r\n      }\r\n    }\r\n    return cells;\r\n  }\r\n\r\n  getElementOffset() {\r\n    const rect = this.boardRef.current.getBoundingClientRect();\r\n    const doc = document.documentElement;\r\n    return {\r\n      x: (rect.left + window.pageXOffset) - doc.clientLeft,\r\n      y: (rect.top + window.pageYOffset) - doc.clientTop,\r\n    };\r\n  }\r\n\r\n  handleIntervalChange = (event) => {\r\n    this.setState(this.setState({interval: event.target.value}));\r\n  };\r\n\r\n  handleClick(event){\r\n    const elemOffset = this.getElementOffset();\r\n    const offsetX = event.clientX - elemOffset.x;\r\n    const offsetY = event.clientY - elemOffset.y;\r\n\r\n    const x = Math.floor(offsetX / 20);\r\n    const y = Math.floor(offsetY / 20);\r\n\r\n    if (x >= 0 && x <= this.cols && y >= 0 && y <= this.rows) {\r\n      this.board[y][x] = !this.board[y][x];\r\n    }\r\n    this.setState({cells: this.makeCells()});\r\n  };\r\n\r\n  handleRandom(){\r\n    for (let y = 0; y < this.rows; y++) {\r\n      for (let x = 0; x < this.cols; x++) {\r\n        this.board[y][x] = (Math.random() >= 0.5);\r\n      }\r\n    }\r\n    this.setState({cells: this.makeCells()});\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.board = this.makeEmptyBoard();\r\n    this.setState({cells: this.makeCells()});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {cells} = this.state;\r\n    return (\r\n        <div className='life'>\r\n          <Header/>\r\n        <ButtonToolbar>\r\n            <Button className='lifeButton' onClick={this.handleRandom} variant=\"primary\">Random</Button><br/>\r\n            <Button className='lifeButton' onClick={this.handleClear} variant=\"secondary\">Clear</Button><br/>\r\n            {this.state.isRunning ?\r\n            <Button className='lifeButton' onClick={this.stopGame} variant=\"warning\">Stop</Button>:\r\n            <Button className='lifeButton' onClick={this.runGame} variant=\"success\">Start</Button>}\r\n        </ButtonToolbar>\r\n          <div className=\"Board\"\r\n               style={{\r\n                 width: WIDTH,\r\n                 height: HEIGHT,\r\n                 backgroundSize: \"20px 20px\"\r\n               }}\r\n               onClick={this.handleClick}\r\n               ref={this.boardRef}\r\n          >\r\n            {cells.map(cell => (\r\n                <Cell x={cell.x} y={cell.y} key={`${cell.x},${cell.y}`}/>\r\n            ))}\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Game;\r\n"],"sourceRoot":""}